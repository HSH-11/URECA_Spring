package proxy;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;

public class CheckNotNullInvocationHandler implements InvocationHandler{

	private Object target;

	public CheckNotNullInvocationHandler(Object target) {
		this.target = target;
	}
	
	// proxy를 통해서 MyIF에 있는 메소드
	@Override
	public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
		// proxy가 할 일이 있으면 하고나서 필요에 따라 실제 메소드를 호출하고
		// 특별한 할 일이 없으면 그냥 bypass (실제 메소드를 호출)
		Method targetMethod = target.getClass().getMethod(method.getName(),method.getParameterTypes());
		
		// 할 일? @CheckNotNull 관련 처리
		if (targetMethod.isAnnotationPresent(CheckNotNull.class)) {
			System.out.println("CheckNotNull method call!!");
		}
		
		return null;
	}
	
}
